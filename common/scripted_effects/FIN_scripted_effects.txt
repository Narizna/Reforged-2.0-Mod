#	Example:
#
#	example_effect = {
#		add_political_power = 66
#		add_popularity = {
#			ideology = fascism
#			popularity = 0.33
#		}
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#


FIN_nokia_tires_after_tech_effect = {
	if = {
		limit = {
			927 = {
				free_building_slots = {
					building = synthetic_refinery
					size > 1
					include_locked = yes
				}
			}
		}
		927 = { #HÄME (Tampere - Nokia)
			add_extra_state_shared_building_slots = 3
			add_building_construction = {
				type = synthetic_refinery
				level = 2
				instant_build = yes
			}
		}
	}
	else_if = {
		limit = {
			927 = {
				free_building_slots = {
					building = synthetic_refinery
					size > 0
					include_locked = yes
				}
			}
		}
		927 = { #HÄME (Tampere - Nokia)
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = synthetic_refinery
				level = 1
				instant_build = yes
			}
		}
		random_core_state = {
			limit = {
				is_fully_controlled_by = ROOT
				free_building_slots = {
					building = synthetic_refinery
					size > 0
					include_locked = yes
				}
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = synthetic_refinery
				level = 1
				instant_build = yes
			}
		}
	}
	else = {
		random_core_state = {
			limit = {
				is_fully_controlled_by = ROOT
				free_building_slots = {
					building = synthetic_refinery
					size > 0
					include_locked = yes
				}
			}
			add_extra_state_shared_building_slots = 3
			add_building_construction = {
				type = synthetic_refinery
				level = 2
				instant_build = yes
			}
		}
	}

	if = {
		limit = {
			has_idea = FIN_nokia
		}
		swap_ideas = {
			remove_idea = FIN_nokia
			add_idea = FIN_nokia_improved
		}
	}
}

### OPERATIVES
FIN_create_operative_hella_wuolijok = { # Focus The Red Watch & Focus Trade Agreements
	create_operative_leader = {
		name = "Hella Wuolijok"
		GFX = GFX_portrait_FIN_hella_wuolijok
		traits = { operative_well_groomed operative_escape_artist }
		bypass_recruitment = no
		available_to_spy_master = yes
		nationalities = { FIN EST }
	}
}

FIN_create_operative_vilho_pentikainen = { # Focus The Red Watch
	create_operative_leader = {
		name = "Vilho Pentikäinen"
		GFX = GFX_portrait_FIN_vilho_pentikainen
		traits = { operative_safe_cracker operative_master_interrogator }
		bypass_recruitment = no
		available_to_spy_master = yes
		nationalities = { FIN SOV }
	}
}


### DECISIONS

FIN_seize_weapon_caches = { #Used on the state scope
	remove_dynamic_modifier = { modifier = FIN_weapon_caches_modifier }
	ROOT = {
		random_list = {
			#log = yes
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 15
					producer = FIN
				}
			}
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 35
					producer = FIN
				}
			}
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 50
					producer = FIN
				}
			}
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 65
					producer = FIN
				}
				add_equipment_to_stockpile = {
					type = support_equipment
					amount = 35
					producer = FIN
				}
			}
		}
	}
}


### CONTINUATION WAR

FIN_pact_for_continuation_war_start = { #To be used on FIN's scope - Used immediately upon signing agreement
	FIN = {
		if = {
			limit = {
				NOT = { gives_military_access_to = GER }
			}
			give_military_access = GER
		}
		diplomatic_relation = { 
			country = GER
			relation = docking_rights 
			active = yes
		}
		if = {
			limit = {
				NOT = { has_non_aggression_pact_with = GER }
			}
			diplomatic_relation = { 
				country = GER
				relation = non_aggression_pact 
				active = yes
			}
		}
	}
	if = {
		limit = {
			GER = { NOT = { has_guaranteed = FIN } }
		}
		GER = { give_guarantee = FIN }
	}
}

### STATE CHANGES AND NAMES ###

#Change name of States and VPs when appropriate. Expected to be used inside on_state_control_changed. FROM.FROM is state / ROOT is new controller / FROM is former controller
FIN_change_name_of_state_or_vp = {
	IF = { # Petrozavodsk / Äänislinna
		limit = {
			FROM.FROM = {
				state = 216 #OLONETS
			}
		}
		IF = { #FINLAND CONTROLLER
			limit = {
				ROOT = { original_tag = FIN }
			}
			set_province_name = { id = 11159 name = VICTORY_POINTS_11159_FIN }
		}
		ELSE_IF = { #OTHER CONTROLLER
			limit = {
				FROM = { original_tag = FIN }
				ROOT = {
					NOT = {
						original_tag = FIN
					}
				}
			}
			reset_province_name = 11159
		}
	}
	ELSE_IF = { # MURMANSK / KUOLAN NIEMIMAA // (Murmansk / Muurmanski) (Kandalaksha / Kantalahti)
		limit = {
			FROM.FROM = {
				state = 213 #MURMANSK
			}
		}
		IF = { #FINLAND CONTROLLER
			limit = {
				ROOT = { original_tag = FIN }
			}
			FROM.FROM = { set_state_name = STATE_213_FIN }
			set_province_name = { id = 3134 name = VICTORY_POINTS_3134_FIN } #Murmansk
			set_province_name = { id = 6181 name = VICTORY_POINTS_6181_FIN } #Kandalaksha
		}
		ELSE_IF = { #OTHER CONTROLLER
			limit = {
				FROM = { original_tag = FIN }
				ROOT = {
					NOT = {
						original_tag = FIN
					}
				}
			}
			FROM.FROM = { reset_state_name = yes }
			reset_province_name = 3134
			reset_province_name = 6181
		}
	}
	ELSE_IF = { # LENINGRAD / PIETARI // (Leningrad / Pietari)
		limit = {
			FROM.FROM = {
				state = 195 #LENINGRAD
			}
		}
		IF = { #FINLAND CONTROLLER
			limit = {
				ROOT = { original_tag = FIN }
			}
			FROM.FROM = { set_state_name = STATE_195_FIN }
			set_province_name = { id = 3151 name = VICTORY_POINTS_3151_FIN } #Leningrad
		}
		ELSE_IF = { #OTHER CONTROLLER
			limit = {
				FROM = { original_tag = FIN }
				ROOT = {
					NOT = {
						original_tag = FIN
					}
				}
			}
			FROM.FROM = { reset_state_name = yes }
			reset_province_name = 3151
		}
	}
}
